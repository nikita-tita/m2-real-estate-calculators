/**
 * –ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—Å—á–µ—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞–º
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∞–≥–µ–Ω—Ç–∞–º –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–æ–≤ —Å–≤–æ–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º
 */

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function initClientShare() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É" –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    addShareButton();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    addShareModal();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    initEventListeners();
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É"
function addShareButton() {
    const actionButtons = document.querySelector('.action-buttons');
    if (!actionButtons) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ª–∏ —É–∂–µ –∫–Ω–æ–ø–∫–∞
    if (!document.getElementById('share-btn')) {
        const shareButton = document.createElement('button');
        shareButton.id = 'share-btn';
        shareButton.className = 'btn-secondary share-btn';
        shareButton.innerHTML = '<span class="icon">üì§</span> –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É';
        actionButtons.appendChild(shareButton);
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function addShareModal() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    if (document.getElementById('share-modal')) return;
    
    const modalHTML = `
    <div id="share-modal" class="modal">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h3>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—á–µ—Ç –∫–ª–∏–µ–Ω—Ç—É</h3>
            <div class="input-group">
                <label class="input-label">–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞</label>
                <input type="text" id="client-name" class="input-field" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞">
            </div>
            <div class="input-group">
                <label class="input-label">Email –∫–ª–∏–µ–Ω—Ç–∞</label>
                <input type="email" id="client-email" class="input-field" placeholder="–í–≤–µ–¥–∏—Ç–µ email –∫–ª–∏–µ–Ω—Ç–∞">
            </div>
            <div class="input-group">
                <label class="input-label">–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞</label>
                <input type="tel" id="client-phone" class="input-field" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞">
            </div>
            <div class="input-group">
                <label class="input-label">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
                <textarea id="client-comment" class="input-field" placeholder="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ä–∞—Å—á–µ—Ç—É"></textarea>
            </div>
            <div class="checkbox-group">
                <input type="checkbox" id="add-m2-link" checked>
                <label for="add-m2-link">–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å—á–µ—Ç —Å—Ç–∞–≤–æ–∫ –æ—Ç –ú2</label>
            </div>
            <button id="send-to-client-btn" class="btn-primary">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        </div>
    </div>`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ –∫–æ–Ω–µ—Ü body
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    addModalStyles();
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function addModalStyles() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –ª–∏ —É–∂–µ —Å—Ç–∏–ª–∏
    if (document.getElementById('share-modal-styles')) return;
    
    const styleElement = document.createElement('style');
    styleElement.id = 'share-modal-styles';
    styleElement.textContent = `
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            overflow: auto;
            animation: fadeIn 0.3s;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        .modal-content {
            background-color: #fff;
            margin: 10% auto;
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            width: 90%;
            max-width: 500px;
            position: relative;
            animation: slideIn 0.3s;
        }
        
        @keyframes slideIn {
            from { transform: translateY(-50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
        
        .close-modal {
            position: absolute;
            right: 20px;
            top: 15px;
            font-size: 28px;
            font-weight: bold;
            color: #aaa;
            cursor: pointer;
            transition: color 0.3s;
        }
        
        .close-modal:hover {
            color: #333;
        }
        
        .share-btn {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .checkbox-group {
            margin: 20px 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        #send-to-client-btn {
            width: 100%;
            margin-top: 20px;
        }
    `;
    
    document.head.appendChild(styleElement);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function initEventListeners() {
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É"
    const shareBtn = document.getElementById('share-btn');
    const modal = document.getElementById('share-modal');
    const closeModal = document.querySelector('.close-modal');
    const sendToClientBtn = document.getElementById('send-to-client-btn');
    
    if (shareBtn && modal) {
        shareBtn.addEventListener('click', () => {
            modal.style.display = 'block';
        });
    }
    
    if (closeModal && modal) {
        closeModal.addEventListener('click', () => {
            modal.style.display = 'none';
        });
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
    window.addEventListener('click', (event) => {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    });
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç—É
    if (sendToClientBtn) {
        sendToClientBtn.addEventListener('click', sendResultsToClient);
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç—É
function sendResultsToClient() {
    const clientName = document.getElementById('client-name').value;
    const clientEmail = document.getElementById('client-email').value;
    const clientPhone = document.getElementById('client-phone').value;
    const clientComment = document.getElementById('client-comment').value;
    const addM2Link = document.getElementById('add-m2-link').checked;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!clientName || !clientEmail) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
        return;
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—Å—á–µ—Ç–∞
    const calculationResults = getCalculationResults();
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API-–∑–∞–ø—Ä–æ—Å)
    showNotification('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...', 'info');
    
    // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    setTimeout(() => {
        showNotification('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–ª–∏–µ–Ω—Ç—É!', 'success');
        document.getElementById('share-modal').style.display = 'none';
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–µ –¥–ª—è –±—É–¥—É—â–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
        saveClientInfo(clientName, clientEmail, clientPhone);
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        logShareEvent(clientEmail, calculationResults);
    }, 1500);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—Å—á–µ—Ç–∞
function getCalculationResults() {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—Å—á–µ—Ç–∞
    const results = {};
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    const calculatorType = document.title.includes('–ò–ø–æ—Ç–µ—á–Ω—ã–π') ? 'mortgage' : 
                          document.title.includes('–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å') ? 'rental' : 'other';
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    if (calculatorType === 'mortgage') {
        const monthlyPayment = document.querySelector('.result-value.monthly-payment')?.textContent;
        const totalPayment = document.querySelector('.result-value.total-payment')?.textContent;
        const overpayment = document.querySelector('.result-value.overpayment')?.textContent;
        
        if (monthlyPayment) results.monthlyPayment = monthlyPayment;
        if (totalPayment) results.totalPayment = totalPayment;
        if (overpayment) results.overpayment = overpayment;
    } else if (calculatorType === 'rental') {
        const yield = document.querySelector('.result-value.yield')?.textContent;
        const roi = document.querySelector('.result-value.roi')?.textContent;
        
        if (yield) results.yield = yield;
        if (roi) results.roi = roi;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    results.calculatorType = calculatorType;
    results.timestamp = new Date().toISOString();
    
    return results;
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ
function saveClientInfo(name, email, phone) {
    try {
        const clientsData = JSON.parse(localStorage.getItem('m2-clients')) || [];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∫–ª–∏–µ–Ω—Ç
        const existingClientIndex = clientsData.findIndex(client => client.email === email);
        
        if (existingClientIndex >= 0) {
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
            clientsData[existingClientIndex] = {
                name,
                email,
                phone,
                lastContact: new Date().toISOString()
            };
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
            clientsData.push({
                name,
                email,
                phone,
                firstContact: new Date().toISOString(),
                lastContact: new Date().toISOString()
            });
        }
        
        localStorage.setItem('m2-clients', JSON.stringify(clientsData));
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞:', error);
    }
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
function logShareEvent(clientEmail, results) {
    if (typeof trackEvent === 'function') {
        trackEvent('share_calculation', {
            calculator_type: results.calculatorType,
            client_email_domain: clientEmail.split('@')[1],
            timestamp: new Date().toISOString()
        });
    }
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, type = 'info') {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    let notificationContainer = document.getElementById('notification-container');
    
    if (!notificationContainer) {
        notificationContainer = document.createElement('div');
        notificationContainer.id = 'notification-container';
        notificationContainer.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1001;
        `;
        document.body.appendChild(notificationContainer);
    }
    
    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.innerHTML = message;
    
    // –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notification.style.cssText = `
        background-color: ${type === 'error' ? '#ff5252' : type === 'success' ? '#4caf50' : '#2196f3'};
        color: white;
        padding: 15px 20px;
        margin-bottom: 10px;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        font-size: 14px;
        font-weight: 500;
        animation: slideInRight 0.3s, fadeOut 0.5s 3s forwards;
        max-width: 300px;
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
    if (!document.getElementById('notification-styles')) {
        const styleElement = document.createElement('style');
        styleElement.id = 'notification-styles';
        styleElement.textContent = `
            @keyframes slideInRight {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
            
            @keyframes fadeOut {
                from { opacity: 1; }
                to { opacity: 0; }
            }
        `;
        document.head.appendChild(styleElement);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    notificationContainer.appendChild(notification);
    
    // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3.5 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        notification.remove();
    }, 3500);
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initClientShare);

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.clientShare = {
    init: initClientShare,
    sendResults: sendResultsToClient,
    showNotification: showNotification
};